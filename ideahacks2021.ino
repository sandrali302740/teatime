/******************************************************
IdeaHacks 2021: Sandra and Vani
1/16/2021
Code sampled from randomnerdtutorials.com
*******************************************************/
#include <stdint.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

//insert image arrays
static const uint8_t image_data_cold01[1024] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x04, 0x00, 0x60, 0x00, 0x60, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x0c, 0x00, 0x6c, 0x00, 0x60, 0x01, 0xb0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 
    0x00, 0x0c, 0xe7, 0x78, 0x1c, 0xf0, 0x39, 0xb0, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x00, 
    0x00, 0x0d, 0xbd, 0xf0, 0x34, 0x40, 0x69, 0xb0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x01, 0xf0, 0x00, 
    0x00, 0x0b, 0x39, 0xf8, 0x6c, 0x40, 0xd9, 0x20, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf0, 0x00, 
    0x00, 0x0b, 0x7b, 0xd8, 0x6c, 0xf0, 0xd9, 0x20, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 
    0x00, 0x09, 0xce, 0xc8, 0x3c, 0x60, 0x79, 0x20, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x01, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x06, 0x20, 0x80, 0x08, 0x00, 0x00, 0x00, 0x0f, 0x81, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x0f, 0x7d, 0xbc, 0x19, 0xce, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x04, 0x7d, 0xa4, 0x1b, 0x52, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xff, 0xff, 0xe7, 0xfc, 0x00, 
    0x00, 0x04, 0x6d, 0x38, 0x16, 0x3c, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xff, 0xf0, 0x07, 0xfc, 0x00, 
    0x00, 0x0f, 0x4d, 0x0c, 0x16, 0xf2, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xff, 0x80, 0x07, 0xfc, 0x00, 
    0x00, 0x06, 0xcd, 0x78, 0x13, 0x9e, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xfe, 0x07, 0xc7, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xfc, 0x3f, 0xcf, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xf8, 0xff, 0xcf, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xf1, 0xef, 0x8f, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xf3, 0xc7, 0x9f, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xf3, 0x8f, 0x1f, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xe3, 0x1e, 0x3f, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xe6, 0x3e, 0x7f, 0xfc, 0x00, 
    0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xe0, 0x7c, 0x7f, 0xfc, 0x00, 
    0x00, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xe0, 0xf0, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xc0, 0x00, 0xff, 0xfc, 0x00, 
    0x00, 0x0f, 0x7c, 0xe5, 0xbf, 0x44, 0x00, 0x00, 0x07, 0xff, 0xff, 0x08, 0x07, 0xff, 0xfc, 0x00, 
    0x00, 0x09, 0x7d, 0xa5, 0xa4, 0x6c, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x0e, 0x6f, 0x67, 0xe4, 0x78, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x03, 0x4f, 0x66, 0xcf, 0x30, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x1e, 0xcd, 0xe4, 0x86, 0x30, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xfc, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const uint8_t image_data_cold02[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xff, 0xdf, 0xff, 0xff, 0xff, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xff, 0xdf, 0xff, 0xdf, 0xff, 0x6f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x01, 0xff, 0xff, 
    0xff, 0xfb, 0xff, 0x93, 0xff, 0x9f, 0xff, 0x6f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xff, 
    0xff, 0xf3, 0x18, 0xa7, 0xe3, 0x0f, 0xc6, 0x4f, 0xff, 0xff, 0x83, 0xff, 0xff, 0xfe, 0x0f, 0xff, 
    0xff, 0xf6, 0x52, 0x8f, 0xdb, 0xbf, 0xb6, 0xdf, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0x0f, 0xff, 
    0xff, 0xf6, 0xc6, 0x8f, 0x9b, 0xbf, 0x36, 0xdf, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0x07, 0xff, 
    0xff, 0xf6, 0x94, 0xa7, 0x9b, 0xbf, 0x36, 0xdf, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0x07, 0xff, 
    0xff, 0xf6, 0x31, 0xb7, 0xc3, 0x9f, 0x86, 0xdf, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xfe, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xfd, 0xdf, 0x7f, 0xf7, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xf9, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xf0, 0x87, 0x63, 0xf6, 0x31, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x18, 0x03, 0xff, 
    0xff, 0xfb, 0x92, 0x5f, 0xe4, 0xad, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x0f, 0xf8, 0x03, 0xff, 
    0xff, 0xfb, 0xb6, 0xe7, 0xed, 0xe3, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x03, 0xff, 
    0xff, 0xfb, 0xb6, 0xf3, 0xe9, 0x8d, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x01, 0xf8, 0x38, 0x03, 0xff, 
    0xff, 0xf9, 0xb6, 0x87, 0xec, 0x61, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x03, 0xc0, 0x30, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x07, 0x00, 0x30, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0e, 0x10, 0x70, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x38, 0x60, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x70, 0xe0, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1c, 0xe1, 0xc0, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x19, 0xc1, 0x80, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x83, 0x80, 0x03, 0xff, 
    0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x0f, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xdf, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x3f, 0xff, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xdf, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xf7, 0xf8, 0x00, 0x03, 0xff, 
    0xff, 0xf8, 0x87, 0x1b, 0x40, 0xbb, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xf7, 0x92, 0xda, 0x5b, 0x93, 0xff, 0xff, 0xf8, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xf9, 0xb4, 0xd8, 0x3b, 0x87, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xfc, 0xb4, 0xd9, 0x3b, 0xcf, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xe1, 0xb6, 0x1b, 0x79, 0xcf, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t image_data_fire[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc9, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3b, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf3, 0xf1, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xfc, 0xf7, 0xf3, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x39, 0xf3, 0xe7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0b, 0xf9, 0xc7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x63, 0xfc, 0x1b, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0xff, 0x9b, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0x9f, 0xfb, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x9f, 0xfb, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x9f, 0xfb, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0x1f, 0xf9, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x61, 0x48, 0xf8, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xf8, 0x60, 0xfa, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xf1, 0xcc, 0x18, 0xff, 0xff, 0xff, 0xff, 0x05, 0xf6, 0xed, 0xf3, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0xd8, 0x10, 0x7f, 0xff, 0xff, 0xff, 0x04, 0xf6, 0xed, 0xe7, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xf7, 0xd9, 0x84, 0x7f, 0xff, 0xff, 0xff, 0x06, 0x77, 0xf1, 0x8f, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xf7, 0x99, 0xe1, 0xff, 0xff, 0xff, 0xfe, 0x07, 0x31, 0xff, 0xbf, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xe7, 0x9b, 0xe7, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xe7, 0x9b, 0xe0, 0x7f, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xfe, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xe7, 0x9b, 0xf0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x18, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x0f, 0xf8, 0x03, 0xff, 
    0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x03, 0xff, 
    0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xf0, 0xfe, 0x00, 0x01, 0xf8, 0x38, 0x03, 0xff, 
    0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xf0, 0xfe, 0x00, 0x03, 0xc0, 0x30, 0x03, 0xff, 
    0xff, 0xfe, 0x0f, 0x1c, 0x1c, 0x70, 0x60, 0xff, 0xf0, 0xfe, 0x00, 0x07, 0x00, 0x30, 0x03, 0xff, 
    0xff, 0xfe, 0x0e, 0x0c, 0x18, 0x20, 0x40, 0xff, 0xf0, 0xfe, 0x00, 0x0e, 0x10, 0x70, 0x03, 0xff, 
    0xff, 0xfe, 0x6c, 0xdf, 0x33, 0x66, 0x1d, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x38, 0x60, 0x03, 0xff, 
    0xff, 0xfc, 0xe9, 0xde, 0x67, 0x67, 0xbd, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x70, 0xe0, 0x03, 0xff, 
    0xff, 0xfc, 0xc9, 0xdc, 0xe7, 0x6f, 0xbd, 0xff, 0xf0, 0xfe, 0x00, 0x1c, 0xe1, 0xc0, 0x03, 0xff, 
    0xff, 0xfc, 0xc8, 0x18, 0x20, 0x6f, 0x81, 0xff, 0xf0, 0xfe, 0x00, 0x19, 0xc1, 0x80, 0x03, 0xff, 
    0xff, 0xfd, 0xcc, 0x10, 0x30, 0x6f, 0xc1, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x83, 0x80, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x0f, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x3f, 0xff, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xf7, 0xf8, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t image_data_warm01[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfe, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfc, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfc, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xfc, 0xdd, 0xbb, 0x8c, 0xd9, 0x8e, 0x0a, 0x4f, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
    0xfd, 0x99, 0xb3, 0x04, 0x9b, 0x04, 0x00, 0x07, 0xff, 0xff, 0xff, 0xcf, 0xf8, 0xff, 0xff, 0xff, 
    0xfd, 0x99, 0x06, 0x44, 0x92, 0x6c, 0xd1, 0x67, 0xff, 0xff, 0xff, 0xcf, 0xff, 0x3f, 0xff, 0xff, 
    0xf9, 0xb9, 0x0e, 0x1c, 0x04, 0xec, 0xf3, 0x67, 0xff, 0xff, 0xff, 0xcf, 0xff, 0x3f, 0xff, 0xff, 
    0xf9, 0xbb, 0x26, 0x7c, 0x44, 0xed, 0xf3, 0x67, 0xff, 0xff, 0xff, 0x8f, 0xff, 0x3f, 0xff, 0xff, 
    0xf9, 0x83, 0x72, 0x04, 0xcc, 0x0d, 0xf7, 0x67, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 
    0xfb, 0x83, 0x73, 0x0e, 0xce, 0x0d, 0xf6, 0x67, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x01, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0x3f, 0xfd, 0xfe, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x8f, 0xfc, 0xff, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xc7, 0xfc, 0xff, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xfe, 0x3f, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0x1f, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xfe, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xfc, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x3c, 0x67, 0x3f, 0xc0, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x38, 0x27, 0x3f, 0xe0, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x33, 0x36, 0x7f, 0xf8, 0x1f, 0xf0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x37, 0x30, 0xff, 0xf0, 0x0f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x37, 0x70, 0xff, 0xf0, 0x0f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x70, 0x79, 0xff, 0xe1, 0x8f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x18, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x78, 0xf9, 0xff, 0xf3, 0xcf, 0xf0, 0xfe, 0x00, 0x00, 0x0f, 0xf8, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0x7f, 0xf3, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x03, 0xff, 
    0xff, 0xff, 0xfa, 0x7f, 0xf7, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x01, 0xf8, 0x38, 0x03, 0xff, 
    0xff, 0xff, 0xf8, 0x7f, 0xe7, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x03, 0xc0, 0x30, 0x03, 0xff, 
    0xff, 0xff, 0xf8, 0xff, 0xef, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x07, 0x00, 0x30, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0e, 0x10, 0x70, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x38, 0x60, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x70, 0xe0, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1c, 0xe1, 0xc0, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x19, 0xc1, 0x80, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x83, 0x80, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x0f, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xf0, 0xfe, 0x00, 0x3f, 0xff, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xf7, 0xf8, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xf8, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfe, 0x18, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0x3c, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t image_data_warm02[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xcf, 0xf8, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xcf, 0xff, 0x3f, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xcf, 0xff, 0x3f, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0xff, 0xcf, 0xff, 0x3f, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0x8f, 0xff, 0x3f, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xbf, 0xff, 0x3f, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x31, 0xff, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 
    0xff, 0xfe, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x79, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x01, 0xff, 0xff, 
    0xff, 0xfc, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xff, 
    0xff, 0xfc, 0xdd, 0xbb, 0x8c, 0xd9, 0x8e, 0x0a, 0x4f, 0xff, 0x83, 0x3f, 0xfd, 0xfe, 0x0f, 0xff, 
    0xff, 0xfd, 0x99, 0xb3, 0x04, 0x9b, 0x04, 0x00, 0x07, 0xff, 0x07, 0x8f, 0xfc, 0xff, 0x0f, 0xff, 
    0xff, 0xfd, 0x99, 0x06, 0x44, 0x92, 0x6c, 0xd1, 0x67, 0xff, 0x07, 0xc7, 0xfc, 0xff, 0x07, 0xff, 
    0xff, 0xf9, 0xb9, 0x0e, 0x1c, 0x04, 0xec, 0xf3, 0x67, 0xff, 0x07, 0xff, 0xfe, 0x3f, 0x07, 0xff, 
    0xff, 0xf9, 0xbb, 0x26, 0x7c, 0x44, 0xed, 0xf3, 0x67, 0xfe, 0x07, 0xff, 0xff, 0x1f, 0x07, 0xff, 
    0xff, 0xf9, 0x83, 0x72, 0x04, 0xcc, 0x0d, 0xf7, 0x67, 0xfe, 0x07, 0xff, 0xff, 0xff, 0x03, 0xff, 
    0xff, 0xfb, 0x83, 0x73, 0x0e, 0xce, 0x0d, 0xf6, 0x67, 0xfe, 0x03, 0xff, 0xff, 0xfe, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x18, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x0f, 0xf8, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x01, 0xf8, 0x38, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x3c, 0x67, 0x3f, 0xff, 0xf0, 0xfe, 0x00, 0x03, 0xc0, 0x30, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x38, 0x27, 0x3f, 0xff, 0xf0, 0xfe, 0x00, 0x07, 0x00, 0x30, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x33, 0x36, 0x7f, 0xff, 0xf0, 0xfe, 0x00, 0x0e, 0x10, 0x70, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x37, 0x30, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x38, 0x60, 0x03, 0xff, 
    0xff, 0xc7, 0xff, 0xff, 0x37, 0x70, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x0c, 0x70, 0xe0, 0x03, 0xff, 
    0xff, 0xc7, 0xff, 0xff, 0x70, 0x79, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1c, 0xe1, 0xc0, 0x03, 0xff, 
    0xff, 0xc7, 0xff, 0xff, 0x78, 0xf9, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x19, 0xc1, 0x80, 0x03, 0xff, 
    0xff, 0xc3, 0xff, 0xff, 0x7f, 0xf3, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x83, 0x80, 0x03, 0xff, 
    0xfc, 0x00, 0x7f, 0xfa, 0x7f, 0xf7, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x1f, 0x0f, 0x00, 0x03, 0xff, 
    0xfc, 0x00, 0x3f, 0xf8, 0x7f, 0xe7, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x3f, 0xff, 0x00, 0x03, 0xff, 
    0xfe, 0x00, 0xff, 0xf8, 0xff, 0xef, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xf7, 0xf8, 0x00, 0x03, 0xff, 
    0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xfe, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0x3c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const int buttonPin = 4;    // the number of the pushbutton pin
const int ledPin = 5;       // the number of the LED pin

int ledState = LOW;         // the current state of the output pin
int buttonState = LOW;             // the current reading from the input pin
int lastButtonState = LOW;   // the previous reading from the input pin
int start = LOW;                   // to trigger the start stuff

unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 50;    // the debounce time; increase if the output flickers
unsigned long startTime = 0;         // the start time to be used as a baseline
unsigned long hotTime = 300000;         // while its hot
unsigned long coolTime = 30000;        // while it warm

void setup() {
  Serial.begin(115200);

  pinMode(buttonPin, INPUT);
  pinMode(ledPin, OUTPUT);

  // set initial LED state
  digitalWrite(ledPin, ledState);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // I2C address
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000);

  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE); //doesn't work but you need it to be here??
  display.setCursor(0, 0);
  display.println("tea\ntime");
  display.display(); 
  delay(1000);
  /*
  display.drawBitmap(0, 0, image_data_fire, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
  display.display();
  display.startscrollright(0x00, 0x0F);
  delay(2000);
  */
//  Serial.print("Loop entered.\n");
}

void loop() {
  // read the state of the switch into a local variable:
  int reading = digitalRead(buttonPin);
  //Serial.print(reading);

  // check to see if you just pressed the button
  // (i.e. the input went from LOW to HIGH), and you've waited long enough
  // since the last press to ignore any noise:

  // If the switch changed, due to noise or pressing:
  if (reading != lastButtonState) {
    // reset the debouncing timer
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {
    // whatever the reading is at, it's been there for longer than the debounce
    // delay, so take it as the actual current state:

    // if the button state has changed:
    if (reading != buttonState) {
      buttonState = reading;

      // only toggle the LED if the new button state is HIGH
      if (buttonState == HIGH) {
        ledState = !ledState;
        start = !start;
      }
    }
  }

  // set the LED:
  digitalWrite(ledPin, ledState);

  // save the reading. Next time through the loop, it'll be the lastButtonState:
  lastButtonState = reading;


  if(start == HIGH){
    // start a timer
    startTime = millis();
    // write to the display with the stuff
    while((millis() - startTime) < hotTime){
        //the code for hot time
        display.clearDisplay();
        display.drawBitmap(0, 0, image_data_fire, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
        display.startscrollright(0x00, 0x0F);
        delay(4000);
      }
     display.stopscroll();
    while((millis() - startTime) < (coolTime+hotTime)){
        // the code for lukewarm joy
        display.clearDisplay();
        display.drawBitmap(0, 0, image_data_warm01, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
        delay(1000);
        display.clearDisplay();
        display.drawBitmap(0, 0, image_data_warm02, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
        delay(1000);
      }
    while(((millis() - startTime) > (coolTime + hotTime)) && (millis() - startTime < (coolTime + hotTime)*1.5)){
        // flex the ice shawty
        display.clearDisplay();
        display.drawBitmap(0, 0, image_data_cold01, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
        delay(1000);
        display.clearDisplay();
        display.drawBitmap(0, 0, image_data_cold02, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
        delay(1000);
      }
     start = LOW;
     display.clearDisplay();
     display.setTextSize(2);
     display.setTextColor(WHITE); //doesn't work but you need it to be here??
     display.setCursor(0, 0);
     display.println("tea\ntime");
     display.display(); 
    } 
}
